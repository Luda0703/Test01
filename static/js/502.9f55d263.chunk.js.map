{"version":3,"file":"static/js/502.9f55d263.chunk.js","mappings":"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","sources":["components/Modal/Modal.jsx","components/CarsList/CarsList.jsx","components/Card/Card.jsx","pages/Catalog/Catalog.jsx"],"sourcesContent":["import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ onClose, data }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClose = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div onClick={handleBackdropClose}>\n      <div className=\"overlay\">\n        <div className=\"modal\">\n          <button onClick={onClose} type=\"button\" className=\"btnClose\">\n            <AiOutlineClose className=\"svgClose\" />\n          </button>\n          <img className=\"imgModal\" src={data.img} alt={data.model} />\n          <div className=\"containerTitleModal\">\n            <ul className=\"titleModal\">\n              <li className=\"marka\">{data.make}</li>\n              <li className=\"modal_m\">{data.model}</li>\n              <li>{data.year}</li>\n            </ul>\n            <div className=\"infoModal\">\n              <div className=\"infoCarModal\">\n                <ul className=\"containerInfoCar\">\n                  <li>{data.address.split(',')[1]}</li>\n                  <li>{data.address.split(',')[2]}</li>\n                  <li className=\"infoCar\">{data.city}</li>\n                  <li className=\"infoCar\">{data.address}</li>\n                  <li className=\"infoCar\">id: {data.id}</li>\n                  <li className=\"infoCar\">year: {data.year}</li>\n                  <li className=\"infoCar\">type: {data.type}</li>\n                  <li className=\"infoCar\">\n                    Fuel Consumption: {data.fuelConsumption}\n                  </li>\n                  <li className=\"infoCar\">Engine Size: {data.engineSize}</li>\n                </ul>\n              </div>\n              <div className=\"description\">{data.description}</div>\n              <p className=\"Accessories\">Accessories and functionalities:</p>\n              <ul className=\"AccessoriesInfo\">\n                {data.accessories.map((item, index) => (\n                  <li className=\"accessoriesInfoList\" key={index}>\n                    {item}\n                  </li>\n                ))}\n                {data.functionalities.map((item, index) => (\n                  <li className=\"accessoriesInfoList\" key={index}>\n                    {item}\n                  </li>\n                ))}\n              </ul>\n              <div>\n                <p className=\"rentalCredition\">Rental Conditions:</p>\n                <ul className=\"list_item\">\n                  <li className=\"item\">\n                    Minimum age:{' '}\n                    <span className=\"item_span\">\n                      {new Date().getFullYear() - data.year}\n                    </span>\n                  </li>\n                  <li className=\"item\">\n                    {data.rentalConditions.split('\\n')[1]}\n                  </li>\n                  <li className=\"item\">\n                    {data.rentalConditions.split('\\n')[2]}\n                  </li>\n                  <li className=\"item\">\n                    Mileage:{' '}\n                    <span className=\"item_span\">\n                      {data.mileage.toLocaleString('en-US')}\n                    </span>\n                  </li>\n                  <li className=\"item\">\n                    Price: <span className=\"item_span\">{data.rentalPrice}</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <a href=\"tel:+380730000000\" className=\"RentalCar\">\n            <span>Rental car</span>\n          </a>\n        </div>\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n  data: PropTypes.object\n};\n\nexport default Modal;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { fetchCar } from '../../Redux/carsFetch';\nimport { HiOutlineHeart } from 'react-icons/hi';\nimport { getFavorite } from '../../Redux/selectors';\nimport { toggleFavorites } from 'Redux/favoriveSlise';\nimport Modal from '../Modal/Modal';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nconst CarsList = ({\n  model,\n  make,\n  id,\n  img,\n  year,\n  address,\n  rentalPrice,\n  rentalCompany,\n  type,\n  functionalities,\n  fuelConsumption,\n  engineSize,\n  description,\n  accessories,\n  rentalConditions,\n  mileage,\n  city,\n}) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const favorite = useSelector(getFavorite);\n\n  const isExists = favorite.some(c => c.id === id);\n\n  const toggleFavoritesCars = id => {\n    dispatch(toggleFavorites({ id }));\n  };\n\n  const toggleModal = () => {\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <div className=\"\">\n      <ul className=\"card_ul\">\n        <li key={id} className=\"card\">\n          <div className=\"image\">\n            <img className=\"image_car\" src={img} alt=\"car\" />\n            <button\n              onClick={() => {\n                toggleFavoritesCars(id);\n              }}\n              className=\"buttonHeart\"\n            >\n              {!isExists ? (\n                <HiOutlineHeart className=\"icon\" />\n              ) : (\n                <HiOutlineHeart\n                  className=\"icon\"\n                  style={{ fill: 'blue', color: 'blue' }}\n                />\n              )}\n            </button>\n          </div>\n          <div className=\"wrapper\">\n            <p className=\"type_car\">\n              {make} <span style={{ color: '#3470FF' }}>{model}</span>, {year}\n            </p>\n            <p className=\"type_car\">{rentalPrice}</p>\n          </div>\n          <ul className=\"address_car\">\n            <li>{address.split(',')[1]}</li>\n            <li>{address.split(',')[2]}</li>\n            <li>{rentalCompany}</li>\n            <li>{type}</li>\n            <li>{model}</li>\n            <li>{mileage}</li>\n            <li>{accessories[0]}</li>\n          </ul>\n          <button\n            className=\"btn\"\n            type=\"button\"\n            onClick={() => {\n              toggleModal();\n              dispatch(fetchCar(id));\n            }}\n          >\n            Learn more\n          </button>\n        </li>\n      </ul>\n\n      {showModal && (\n        <Modal\n          onClose={closeModal}\n          data={{\n            make,\n            year,\n            rentalPrice,\n            address,\n            rentalCompany,\n            type,\n            accessories,\n            mileage,\n            model,\n            id,\n            fuelConsumption,\n            engineSize,\n            description,\n            functionalities,\n            img,\n            rentalConditions,\n            city,\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nCarsList.propTypes = {\n  id: PropTypes.string.isRequired,\n  model: PropTypes.string.isRequired,\n  make: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  address: PropTypes.string.isRequired,\n  rentalPrice: PropTypes.string.isRequired,\n  rentalCompany: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  functionalities: PropTypes.array.isRequired,\n  fuelConsumption: PropTypes.string.isRequired,\n  engineSize: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  accessories: PropTypes.array.isRequired,\n  rentalConditions: PropTypes.string.isRequired,\n  mileage: PropTypes.number.isRequired,\n  city: PropTypes.string,\n};\n\nexport default CarsList;\n","import CarsList from \"components/CarsList/CarsList\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectFilteredCatalogs } from \"Redux/selectors\";\nimport './styles.css';\n\nexport const Card = () => {\n    const cards = useSelector(selectFilteredCatalogs);\n    const [visibleCount, setVisibleCount] = useState(8); \n  \n    const loadMore = () => {\n      setVisibleCount((prevCount) => prevCount + 8); \n    };\n  \n    return (\n      <>\n        <div className=\"container_cards\" >\n          {cards.slice(0, visibleCount).map((car) => (\n            <CarsList key={car.id} {...car} />\n          ))}\n          {visibleCount < cards.length && (\n            <button\n            className=\"btn_load_more\"\n              onClick={loadMore}\n              style={{ margin: \"100px auto\", display: \"block\" }}\n            >\n              Load more\n            </button>\n          )}\n        </div>\n      </>\n    );\n  };","import './styles.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchCars } from '../../Redux/carsFetch';\nimport { getCars } from '../../Redux/selectors';\n\nimport { getIsLoading, getError } from '../../Redux/selectors';\nimport { Card } from 'components/Card/Card';\n\nfunction Catalog() {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const cars = useSelector(getCars);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCars());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <form className=\"container_search\">\n        <div className=\"cont_label_one\">\n          <label htmlFor=\"make\" className=\"lb_input\">\n            Car brand{' '}\n          </label>\n          <select id=\"make\" name=\"make\" className=\"input_one\">\n            {cars.map(({ make, id }) => (\n              <option key={id}>{make}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"cont_label_two\">\n          <label htmlFor=\"rentalPrice\" className=\"lb_input\">\n            Price/ 1 hour\n          </label>\n          <select id=\"rentalPrice\" name=\"rentalPrice\" className=\"input_two\">\n            {cars.map(({ rentalPrice, id }) => (\n              <option key={id}>{rentalPrice}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"cont_label_three \">\n          <label className=\"lb_input\">\n            Сar mileage / km\n            <div className=\"cont_input\">\n              <input\n                type=\"text\"\n                placeholder=\"From\"\n                name=\"mileage\"\n                className=\"input_three\"\n              />\n              <input\n                name=\"km\"\n                type=\"text\"\n                placeholder=\"To\"\n                className=\"imput-four\"\n              />\n            </div>\n          </label>\n        </div>\n        <button type=\"submite\" className=\"butn\">\n          Search\n        </button>\n      </form>\n      <Card cars={cars} />\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n    </div>\n  );\n}\n\nexport default Catalog;\n"],"names":["modalRoot","document","querySelector","onClose","data","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","target","currentTarget","className","type","src","img","alt","model","make","year","address","split","city","id","fuelConsumption","engineSize","description","accessories","map","item","index","functionalities","Date","getFullYear","rentalConditions","mileage","toLocaleString","rentalPrice","href","rentalCompany","useState","showModal","setShowModal","dispatch","useDispatch","isExists","useSelector","getFavorite","some","c","toggleFavorites","toggleFavoritesCars","style","fill","color","fetchCar","Card","cards","selectFilteredCatalogs","visibleCount","setVisibleCount","slice","car","CarsList","length","prevCount","margin","display","isLoading","getIsLoading","error","getError","cars","getCars","fetchCars","htmlFor","name","placeholder"],"sourceRoot":""}