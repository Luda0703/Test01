{"version":3,"file":"static/js/281.723e05c0.chunk.js","mappings":"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","sources":["components/Modal/Modal.jsx","components/CarsList/CarsList.jsx","components/Catalog/Catalog.jsx"],"sourcesContent":["import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getSingleCar } from '../../Redux/selectors';\nimport { AiOutlineClose } from 'react-icons/ai';\n// import { fetchCar, fetchCars } from '../../Redux/carsFetch';\n\nimport './styles.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, cars }) {\n  const car = useSelector(getSingleCar);\n//   const dispatch = useDispatch();\n//  const carArray = (Array(car));\n//  console.log(carArray)\n\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClose = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div onClick={handleBackdropClose}>\n      <div className=\"overlay\">\n        <div className=\"modal\">\n          <button onClick={onClose} type=\"button\" className=\"btnClose\">\n            <AiOutlineClose className=\"svgClose\" />\n          </button>\n          <img className=\"imgModal\" src={car.img} alt={car.model} />\n          <div className=\"containerTitleModal\">\n            <ul className=\"titleModal\">\n              <li className=\"marka\">{car.make}</li>\n              <li className=\"modal_m\">{car.model}</li>\n              <li>{car.year}</li>\n            </ul>\n            <div className=\"infoModal\">\n              <div className=\"infoCarModal\">\n                <ul className=\"containerInfoCar\">\n                  {/* <li >{car.address.split(',')[1]}</li>\n                 <li >{car.address.split(',')[2]}</li> */}\n                  {/* <li className='infoCar'>{car.city}</li> */}\n                  <li className=\"infoCar\">{car.address}</li>\n                  <li className=\"infoCar\">id: {car.id}</li>\n                  <li className=\"infoCar\">year: {car.year}</li>\n                  <li className=\"infoCar\">type: {car.type}</li>\n                  <li className=\"infoCar\">\n                    Fuel Consumption: {car.fuelConsumption}\n                  </li>\n                  <li className=\"infoCar\">Engine Size: {car.engineSize}</li>\n                </ul>\n              </div>\n              <div className=\"description\">{car.description}</div>\n              <p className=\"Accessories\">Accessories and functionalities:</p>\n              <ul className=\"AccessoriesInfo\">\n                {/* {car.accessories.map((item, index) => (\n                 <li className='accessoriesInfoList' key={index}>\n                   {item}\n                 </li>\n               ))}\n                {car.functionalities.map((item, index) => (\n                 <li className='accessoriesInfoList' key={index}>\n                   {item}\n                 </li>\n               ))} */}\n              </ul>\n              <div>\n                <p className=\"rentalCredition\">Rental Conditions:</p>\n                <ul className=\"list_item\">\n                  <li className=\"item\">\n                    Minimum age:{' '}\n                    <span className=\"item_span\">\n                      {new Date().getFullYear() - car.year}\n                    </span>\n                  </li>\n                  {/* <li className='item'>\n                  {car.rentalConditions.split('\\n')[1]}\n                </li>\n                  <li className='item'>\n                  {car.rentalConditions.split('\\n')[2]}\n                </li>\n                  <li className=\"item\">\n                    Mileage:{' '}\n                    <span className='item_span'>\n                    {car.mileage.toLocaleString('en-US')}\n                  </span>\n                  </li> */}\n                  <li className=\"item\">\n                    Price: <span className=\"item_span\">{car.rentalPrice}</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <a href=\"tel:+380730000000\" className=\"RentalCar\">\n            <span>Rental car</span>\n          </a>\n        </div>\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { fetchCar } from '../../Redux/carsFetch';\nimport { HiOutlineHeart } from 'react-icons/hi';\n// import { getFavorite } from 'Redux/selectors';\n// import { getFavorite } from '../../Redux/selectors';\n// import { actions } from \"Redux/favoriveSlise\";\nimport { plusFavoriteList, minusFavoriteList } from '../../Redux/favoriveSlise';\nimport Modal from '../Modal/Modal';\nimport './styles.css';\n// import { useAcrions } from 'components/hooks/useActions';\n// import { useFavorite } from 'components/hooks/useFavorive';\n// import { useFetch } from 'components/hooks/useFetch';\n\n\nconst CarsList = ({ cars, id }) => {\n    console.log(cars)\n  const [showModal, setShowModal] = useState(false);\n\n  const dispatch = useDispatch();\n   \n//   const car = useSelector(getSingleCar);\n \n  const [visible, setVisible] = useState(8);\n  const favorite = useSelector((state) => state.favorite)\n//   const favorite = useSelector(getFavorite);\n//   console.log(favorite)\n\n// const {toggleFavorites} = useAcrions();\n\n//   const isExists = favorite.some(r => r.id === favoriteCars.id)\n\n\n    const favoriteStatus = favorite.includes(id);\n\n  const incrementFavorite = () => {\n    dispatch(plusFavoriteList(id));\n  };\n  const decrementFavorite = () => {\n    dispatch(minusFavoriteList(id));\n  };\n\n//   const showLike = !favoriteStatus ? incrementFavorite : decrementFavorite;\n\n  const toggleModal = () => {\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const showMoreItems = () => {\n    setVisible(prevValue => prevValue + 8);\n  };\n\n\n  return (\n    <div className=\"container_list_map\">\n      <ul className=\"container_cards\">\n        {cars\n          .slice(0, visible)\n          .map(\n            ({\n              img,\n              make,\n              type,\n              year,\n              rentalPrice,\n              model,\n              id,\n              address,\n              rentalCompany,\n              mileage,\n              accessories,\n            }) => (\n              <li key={id} className=\"card\">\n                <div className=\"image\">\n                  <img className=\"image_car\" src={img} alt=\"car\" />\n                  <button\n                    // onClick={() => {\n                    //     // favoriteCars={favoriteCars}\n                    //   dispatch(fetchCar(favoriteCars));\n                    //   showLike();\n                    // }}\n                      onClick={!favoriteStatus ? incrementFavorite : decrementFavorite}\n                    className=\"buttonHeart\"\n                    // onClick={() => dispatch(fetchCar(id))}\n                    // onClick={() => toggleFavorites(favoriteCars)}\n                  >\n                    {!favoriteStatus ? (\n                      <HiOutlineHeart className=\"icon\" />\n                    ) : (\n                      <HiOutlineHeart\n                        className=\"icon\"\n                        style={{ fill: 'blue', color: 'blue' }}\n                      />\n                    )}\n                  </button>\n                </div>\n                <div className=\"wrapper\">\n                  <p className=\"type_car\">\n                    {make} <span style={{ color: '#3470FF' }}>{model}</span>,{' '}\n                    {year}\n                  </p>\n                  <p className=\"type_car\">{rentalPrice}</p>\n                </div>\n                <ul className=\"address_car\">\n                  <li>{address.split(',')[1]}</li>\n                  <li>{address.split(',')[2]}</li>\n                  <li>{rentalCompany}</li>\n                  <li>{type}</li>\n                  <li>{model}</li>\n                  <li>{mileage}</li>\n                  <li>{accessories[0]}</li>\n                </ul>\n                <button\n                  className=\"btn\"\n                  type=\"button\"\n                  \n                  onClick={() => {\n                    toggleModal();\n                    cars = {cars}\n                    dispatch(fetchCar(id))\n                    ;\n                  }}\n                >\n                  Learn more\n                </button>\n              </li>\n            )\n          )}\n      </ul>\n\n      <button className=\"btn_load_more\" type=\"button\" onClick={showMoreItems}>\n        Load more\n      </button>\n\n      {showModal && <Modal onClose={closeModal} />}\n    </div>\n  );\n};\n\nexport default CarsList;\n","import './styles.css';\nimport CarsList from '../CarsList/CarsList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchCars } from '../../Redux/carsFetch';\nimport {\n    // getFavorite,\n    getCars,\n  } from '../../Redux/selectors';\n\n\nimport {\n  getIsLoading,\n  getError,\n//   getFilter,\n} from '../../Redux/selectors';\n// import { Loader } from 'components/Loader/Loader';\n// import { setStatusFilter } from '../../Redux/filtersSlice';\n\nfunction Catalog({id}) {\nconst isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n//   const filter = useSelector(getFilter);\n\n  const cars = useSelector(getCars);\n//   const favoriteCars = useSelector(getFavorite)\n//   console.log(favoriteCars)\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCars());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <form className=\"container_search\">\n        <div className=\"cont_label_one\">\n          <label htmlFor=\"make\" className=\"lb_input\">\n            Car brand{' '}\n          </label>\n          <select\n            id=\"make\"\n            name=\"make\"\n            className=\"input_one\"\n            // value={filter}\n            // onChange={e => dispatch(setStatusFilter(e.currentTarget.value))}\n          >\n            {cars.map(({ make, id }) => (\n              <option key={id}>{make}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"cont_label_two\">\n          <label htmlFor=\"rentalPrice\" className=\"lb_input\">\n            Price/ 1 hour\n          </label>\n          <select id=\"rentalPrice\" name=\"rentalPrice\" className=\"input_two\">\n            {cars.map(({ rentalPrice, id }) => (\n              <option key={id}>{rentalPrice}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"cont_label_three \">\n          <label className=\"lb_input\">\n            Сar mileage / km\n            <div className=\"cont_input\">\n              <input\n                type=\"text\"\n                placeholder=\"From\"\n                name=\"mileage\"\n                className=\"input_three\"\n              />\n              <input\n                name=\"km\"\n                type=\"text\"\n                placeholder=\"To\"\n                className=\"imput-four\"\n              />\n            </div>\n          </label>\n        </div>\n        <button type=\"submite\" className=\"butn\">\n          Search\n        </button>\n      </form>\n      <CarsList \n      cars={cars} \n    //   favoriteCars={favoriteCars}\n      id={id}\n      />\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n    </div>\n  );\n}\n\nexport default Catalog;\n"],"names":["modalRoot","document","querySelector","Modal","onClose","car","cars","useSelector","getSingleCar","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","target","currentTarget","className","type","src","img","alt","model","make","year","address","id","fuelConsumption","engineSize","description","Date","getFullYear","rentalPrice","href","console","log","useState","showModal","setShowModal","dispatch","useDispatch","visible","setVisible","favoriteStatus","state","favorite","includes","incrementFavorite","plusFavoriteList","decrementFavorite","minusFavoriteList","slice","map","rentalCompany","mileage","accessories","style","fill","color","split","fetchCar","prevValue","isLoading","getIsLoading","error","getError","getCars","fetchCars","htmlFor","name","placeholder"],"sourceRoot":""}